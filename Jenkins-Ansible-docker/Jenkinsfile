pipeline{
    agent any
    stages{
        stage("Checkout code from SCM"){
            steps{
            git branch: 'main', url: 'https://github.com/anuja2015/DevOpsPractice.git'
            }
        }
        stage("Copy files over ssh")
        {
            steps{
                sshPublisher(publishers: [sshPublisherDesc(configName: 'dockermachine', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'Jenkins-Ansible-docker/dockerfile ,Jenkins-Ansible-docker/finexo/* , Jenkins-Ansible-docker/finexo/*/*')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
            }
        }
        stage("Create docker image and push to dockerhub")
        {
            steps{
               ansiblePlaybook becomeUser: 'dockeradmin', installation: 'ansible', inventory: '${WORKSPACE}/Jenkins-Ansible-docker/playbook/hosts', playbook: '${WORKSPACE}/Jenkins-Ansible-docker/playbook/docker.yaml'
            }
        }
        stage("Deploy the container")
        {
            steps{
                ansiblePlaybook becomeUser: 'dockeradmin', installation: 'ansible', inventory: 'Jenkins-Ansible-docker/playbook/hosts', playbook: 'Jenkins-Ansible-docker/playbook/deployment.yaml'
            }
        }
    }
}
